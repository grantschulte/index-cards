"use strict";function pathRef(args){for(var i=0;i<args.length;i++)"object"==typeof args[i]&&(args[i]=pathRef(args[i]));return args.join("/")}angular.module("indexCards",["indexCards.config","indexCards.services","indexCards.controllers","indexCards.routes","indexCards.factories","simpleLoginTools","routeSecurity"]).run(["loginService","$rootScope","FBURL",function(loginService,$rootScope,FBURL){"https://INSTANCE.firebaseio.com"===FBURL?(angular.element(document.body).html("<h1>Please configure app/js/config.js before running!</h1>"),setTimeout(function(){angular.element(document.body).removeClass("hide")},250)):($rootScope.auth=loginService.init("/"),$rootScope.FBURL=FBURL)}]).run(function($rootScope,$location){$rootScope.$on("$routeChangeSuccess",function(event,currentRoute){$rootScope.title="/"===$location.$$path?"IndexCards v1 - Create index card sets to study topics or enhance your vocabulary.":"IndexCards v1 - "+currentRoute.title})}),angular.module("indexCards.config",[]).constant("version","0.6").constant("FBURL","https://boiling-fire-4618.firebaseio.com/").constant("wordnikUrl","http://api.wordnik.com:80/v4/word.json").constant("loginRedirectPath","/"),angular.module("indexCards.controllers",[]),angular.module("indexCards.factories",["ngResource"]).factory("Words",["$resource","wordnikUrl",function($resource,wordnikUrl){return $resource(wordnikUrl+"/:word/:type",{word:"@word",type:"definitions",limit:5,includeRelated:!0,sourceDictionaries:"all",useCanonical:!1,includeTags:!1,api_key:"c5514170aa3ba04d9f1da262f5a002a7ecf3a89b5133cd5ad"})}]).factory("Set",["FBURL","$firebase",function(FBURL,$firebase){var fbref=null,_ref=null;return{get:function(uid,setid){return _uid=uid,_setid=setid,fbref=new Firebase(FBURL+"users/"+uid+"/sets/"+setid),_ref=$firebase(fbref)},rename:function(name){_ref.$update({name:name}).then(function(){console.log("Rename Successful")},function(err){console.error("Rename Failed: ",err)})}}}]).factory("Sets",["FBURL","$firebase",function(FBURL,$firebase){var fbref=null,_ref=null;return{get:function(uid){return fbref=new Firebase(FBURL+"users/"+uid+"/sets/"),_ref=$firebase(fbref)},create:function(set){_ref.$add({name:set,cards:!1,count:0}).then(function(){console.log("Set created")},function(err){console.error("Login failed: ",err)})},remove:function(id){_ref.$remove(id)}}}]).factory("Cards",["FBURL","$firebase","cardCount",function(FBURL,$firebase,cardCount){var fbref=null,_ref=null,_uid=null,_setid=null;return{get:function(uid,setid){return _uid=uid,_setid=setid,fbref=new Firebase(FBURL+"users/"+uid+"/sets/"+setid+"/cards"),_ref=$firebase(fbref)},create:function(term,def){_ref.$add({term:term,definition:def}).then(function(){console.log("Success"),cardCount.increment(_uid,_setid)},function(err){console.log("Create Card Failure: ",err)})},remove:function(id){_ref.$remove(id),cardCount.decrement(_uid,_setid)}}}]).factory("Profile",["FBURL","$firebase",function(FBURL,$firebase){return{get:function(uid){return $firebase(new Firebase(FBURL+"users/"+uid))}}}]),function(angular){function RouteSecurityManager($location,$rootScope,$route,path){this._route=$route,this._location=$location,this._rootScope=$rootScope,this._loginPath=path,this._redirectTo=null,this._authenticated=!(!$rootScope.auth||!$rootScope.auth.user),this._init()}angular.module("routeSecurity",[]).run(["$injector","$location","$rootScope","loginRedirectPath",function($injector,$location,$rootScope,loginRedirectPath){$injector.has("$route")&&new RouteSecurityManager($location,$rootScope,$injector.get("$route"),loginRedirectPath)}]),RouteSecurityManager.prototype={_init:function(){var self=this;this._checkCurrent(),self._rootScope.$on("$routeChangeStart",function(e,next){self._authRequiredRedirect(next,self._loginPath)}),self._rootScope.$on("$firebaseSimpleLogin:login",angular.bind(this,this._login)),self._rootScope.$on("$firebaseSimpleLogin:logout",angular.bind(this,this._logout)),self._rootScope.$on("$firebaseSimpleLogin:error",angular.bind(this,this._error))},_checkCurrent:function(){this._route.current&&this._authRequiredRedirect(this._route.current,this._loginPath)},_login:function(){this._authenticated=!0,this._redirectTo?(this._redirect(this._redirectTo),this._redirectTo=null):this._location.path()===this._loginPath&&(this._location.replace(),this._location.path("/"))},_logout:function(){this._authenticated=!1,this._checkCurrent()},_error:function(){this._rootScope.auth&&this._rootScope.auth.user||(this._authenticated=!1),this._checkCurrent()},_redirect:function(path){this._location.replace(),this._location.path(path)},_authRequiredRedirect:function(route,path){route.authRequired&&!this._authenticated?(this._redirectTo=void 0===route.pathTo?this._location.path():route.pathTo===path?"/":route.pathTo,this._redirect(path)):this._authenticated&&this._location.path()===this._loginPath&&this._redirect("/")}}}(angular),angular.module("simpleLoginTools",[]).service("waitForAuth",function($rootScope,$q,$timeout){function fn(err){$rootScope.auth&&($rootScope.auth.error=err instanceof Error?err.toString():null);for(var i=0;i<subs.length;i++)subs[i]();$timeout(function(){def.resolve()})}var def=$q.defer(),subs=[];return subs.push($rootScope.$on("$firebaseSimpleLogin:login",fn)),subs.push($rootScope.$on("$firebaseSimpleLogin:logout",fn)),subs.push($rootScope.$on("$firebaseSimpleLogin:error",fn)),def.promise}).config(function($provide){$provide.decorator("ngCloakDirective",function($delegate,waitForAuth){var directive=$delegate[0],_compile=directive.compile;return directive.compile=function(element,attr){waitForAuth.then(function(){_compile.call(directive,element,attr)})},$delegate})}).directive("ngShowAuth",function($rootScope){function getExpectedState(scope,attr){var expState=scope.$eval(attr);return"string"==typeof expState||angular.isArray(expState)||(expState=attr),"string"==typeof expState&&(expState=expState.split(",")),expState}function inList(needle,list){var res=!1;return angular.forEach(list,function(x){return x===needle?(res=!0,!0):!1}),res}function assertValidStates(states){if(!states.length)throw new Error("ng-show-auth directive must be login, logout, or error (you may use a comma-separated list)");return angular.forEach(states,function(s){if(!inList(s,["login","logout","error"]))throw new Error('Invalid state "'+s+'" for ng-show-auth directive, must be one of login, logout, or error')}),!0}var loginState="logout";return $rootScope.$on("$firebaseSimpleLogin:login",function(){loginState="login"}),$rootScope.$on("$firebaseSimpleLogin:logout",function(){loginState="logout"}),$rootScope.$on("$firebaseSimpleLogin:error",function(){loginState="error"}),{restrict:"A",link:function(scope,el,attr){function fn(){var show=inList(loginState,expState);setTimeout(function(){el.toggleClass("ng-cloak",!show)},0)}var expState=getExpectedState(scope,attr.ngShowAuth);assertValidStates(expState),fn(),$rootScope.$on("$firebaseSimpleLogin:login",fn),$rootScope.$on("$firebaseSimpleLogin:logout",fn),$rootScope.$on("$firebaseSimpleLogin:error",fn)}}}),angular.module("indexCards.routes",["ngRoute"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"../views/login.ejs"}).when("/profile/:id",{authRequired:!0,templateUrl:"../views/profile.ejs",title:"Profile"}).when("/profile/:id/sets/:setid/edit",{authRequired:!0,templateUrl:"../views/edit.ejs",title:"Edit Set"}).when("/profile/:id/sets/:setid",{authRequired:!0,templateUrl:"../views/cards.ejs",title:"View Cards"}).when("/profile/:id/sets/:setid/search",{authRequired:!0,templateUrl:"../views/search.ejs",title:"Search for terms"})}),angular.module("indexCards.service.cardCount",["firebase"]).factory("cardCount",["FBURL","$firebase",function(FBURL,$firebase){return{increment:function(uid,setid){fbref=new Firebase(FBURL+"users/"+uid+"/sets/"+setid),_ref=$firebase(fbref);var count=_ref.$child("count");count.$transaction(function(currentCount){if(!currentCount)return 1;if(!(0>currentCount))return currentCount+1})},decrement:function(uid,setid){fbref=new Firebase(FBURL+"users/"+uid+"/sets/"+setid),_ref=$firebase(fbref);var count=_ref.$child("count");count.$transaction(function(currentCount){return currentCount&&currentCount>0?currentCount-1:void 0})}}}]),angular.module("indexCards.service.firebase",["firebase"]).factory("firebaseRef",["Firebase","FBURL",function(Firebase,FBURL){return function(){return new Firebase(pathRef([FBURL].concat(Array.prototype.slice.call(arguments))))}}]),angular.module("indexCards.service.login",["firebase","indexCards.service.firebase"]).factory("loginService",["$rootScope","$firebaseSimpleLogin","firebaseRef","profileCreator","$timeout",function($rootScope,$firebaseSimpleLogin,firebaseRef,profileCreator,$timeout){function assertAuth(){if(null===auth)throw new Error("Must call loginService.init() before using its methods")}var auth=null;return{init:function(){return auth=$firebaseSimpleLogin(firebaseRef())},login:function(email,password,callback){assertAuth(),auth.$login("password",{email:email,password:password,rememberMe:!0}).then(function(user){callback&&callback(null,user)},callback)},logout:function(){assertAuth(),auth.$logout()},changePassword:function(opts){assertAuth();var cb=opts.callback||function(){};opts.oldpass&&opts.newpass?opts.newpass!==opts.confirm?$timeout(function(){cb("Passwords do not match")}):auth.$changePassword(opts.email,opts.oldpass,opts.newpass).then(function(){cb&&cb(null)},cb):$timeout(function(){cb("Please enter a password")})},createAccount:function(email,password,callback){assertAuth(),auth.$createUser(email,password).then(function(user){callback&&callback(null,user)},callback)},createProfile:profileCreator}}]).factory("profileCreator",["firebaseRef","$timeout",function(firebaseRef,$timeout){return function(id,email,callback){firebaseRef("users/"+id).set({email:email,id:id,sets:!1},function(err){callback&&$timeout(function(){callback(err)})})}}]),function(){angular.module("indexCards.services",["indexCards.service.login","indexCards.service.firebase","indexCards.service.cardCount"])}(),angular.module("indexCards.controllers").controller("CardsCtrl",["$scope","$rootScope","$routeParams","cardCount","Words","Set","Profile","Cards",function($scope,$rootScope,$routeParams,cardCount,Words,Set,Profile,Cards){var init=function(){$scope.uid=$routeParams.id,$scope.setid=$routeParams.setid,$scope.loading=!0,getProfile(),getSet(),getCards(),$scope.currentCard=1,$scope.cardOn=!1,$scope.scroll_left_px=0,$scope.scroll_left={left:$scope.scroll_left_px+"px"}};$scope.createCard=function(){Cards.create($scope.term,$scope.definition),resetAddCards()},$scope.nextCard=function(){return resetAddCards(),$scope.currentCard===$scope.set.count?!1:($scope.scroll_left_px=$scope.scroll_left_px-670,$scope.currentCard+=1,void($scope.cardOn=!1))},$scope.prevCard=function(){return resetAddCards(),1===$scope.currentCard?!1:($scope.scroll_left_px=$scope.scroll_left_px+670,$scope.currentCard-=1,void($scope.cardOn=!1))},$scope.scrollLeft=function(){return{left:$scope.scroll_left_px+"px"}},$scope.flipCard=function(id){id+1===$scope.currentCard&&($scope.cardOn=!$scope.cardOn)},$scope.toggleAddCards=function(){return 0===$scope.set.count?!1:void($scope.addCardsOpen=!$scope.addCardsOpen)};var getProfile=function(){$scope.profile=Profile.get($routeParams.id)},getSet=function(){$scope.set=Set.get($scope.uid,$scope.setid)},getCards=function(){$scope.cards=Cards.get($scope.uid,$scope.setid),$scope.loading=!1},resetAddCards=function(){$scope.addCardsOpen=!1,$scope.term="",$scope.definition=""};init()}]),angular.module("indexCards.controllers").controller("EditSetCtrl",["$scope","$rootScope","$routeParams","Profile","Set","Cards",function($scope,$rootScope,$routeParams,Profile,Set,Cards){var init=function(){$scope.uid=$routeParams.id,$scope.setid=$routeParams.setid,$scope.renameActive=!1,getProfile(),getSet(),getCards()};$scope.deleteCard=function(id){Cards.remove(id)},$scope.editSetName=function(){Set.rename($scope.set.name),$scope.renameActive=!1};var getProfile=function(){$scope.profile=Profile.get($scope.uid)},getSet=function(){$scope.set=Set.get($scope.uid,$scope.setid)},getCards=function(){$scope.cards=Cards.get($scope.uid,$scope.setid)};$scope.$watch("set.name",function(newName,oldName){newName&&oldName&&($scope.renameActive=!0)}),init()}]),angular.module("indexCards.controllers").controller("HeaderCtrl",["$scope","$rootScope","$location","loginService",function($scope,$rootScope,$location,loginService){var init=function(){$scope.ctrlOpen=!1};$scope.isLogin=function(){return"/"===$location.$$path?!0:void 0},$scope.logout=function(){loginService.logout()},$scope.toggleCtrl=function(){$scope.ctrlOpen=!$scope.ctrlOpen},init()}]),angular.module("indexCards.controllers").controller("LoginCtrl",["$scope","$rootScope","$location","loginService",function($scope,$rootScope,$location,loginService){function assertValidLoginAttempt(){return $scope.email?$scope.password?$scope.password!==$scope.confirm?$scope.err="Passwords do not match":$scope.password.length<6&&($scope.err="Password must have at least 6 characters"):$scope.err="Please enter a password":$scope.err="Please enter an email address",!$scope.err}var init=function(){$scope.email=null,$scope.password=null,$scope.loading=!1,$scope.showLogin=!0,$scope.cardOn=!1};$scope.login=function(cb){$scope.err=null,$scope.loading=!0,$scope.email?$scope.password?loginService.login($scope.email,$scope.password,function(err,user){$scope.err=err?err+"":null,err?$scope.loading=!1:(cb&&cb(user),$location.path("/profile/"+user.id))}):$scope.err="Please enter a password":$scope.err="Please enter an email address"},$scope.createAccount=function(){$scope.err=null,$scope.loading=!0,assertValidLoginAttempt()&&loginService.createAccount($scope.email,$scope.password,function(err,user){err?($scope.err=err?err+"":null,$scope.loading=!1):$scope.login(function(){loginService.createProfile(user.id,user.email)})})},$scope.flipCard=function(){$scope.hideGuide=!0,$scope.cardOn=!$scope.cardOn},init()}]),angular.module("indexCards.controllers").controller("ProfileCtrl",["$scope","$rootScope","$routeParams","Profile","Sets",function($scope,$rootScope,$routeParams,Profile,Sets){var init=function(){$scope.uid=$routeParams.id,getProfile(),getSets()};$scope.createSet=function(){return $scope.setname?(Sets.create($scope.setname),void($scope.setname="")):!1},$scope.deleteSet=function(id){Sets.remove(id)};var getProfile=function(){$scope.profile=Profile.get($scope.uid)},getSets=function(){$scope.sets=Sets.get($scope.uid)};init()}]),angular.module("indexCards.controllers").controller("SearchCtrl",["$scope","$rootScope","$routeParams","Words","Profile","Set","Cards",function($scope,$rootScope,$routeParams,Words,Profile,Set,Cards){var init=function(){$scope.uid=$routeParams.id,$scope.setid=$routeParams.setid,getProfile(),getSet(),getCards(),$scope.loading=!1};$scope.createCard=function(){Cards.create($scope.term,$scope.definition),getSet()},$scope.addCard=function(term,def){$scope.term=term,$scope.definition=def,$scope.createCard()},$scope.getWords=function(){$scope.loading=!0;var word=$scope.word.toLowerCase();Words.query({word:word}).$promise.then(function(words){$scope.wordList=words,$scope.loading=!1},function(err){$scope.error=err})};var getProfile=function(){$scope.profile=Profile.get($scope.uid)},getSet=function(){$scope.set=Set.get($scope.uid,$scope.setid)},getCards=function(){$scope.cards=Cards.get($scope.uid,$scope.setid)};init()}]);